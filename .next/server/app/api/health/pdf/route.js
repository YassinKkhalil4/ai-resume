"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/health/pdf/route";
exports.ids = ["app/api/health/pdf/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fhealth%2Fpdf%2Froute&page=%2Fapi%2Fhealth%2Fpdf%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fhealth%2Fpdf%2Froute.ts&appDir=%2FUsers%2Fyassinkhalil%2FDownloads%2Fai-resume-tailor_v2_full%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fyassinkhalil%2FDownloads%2Fai-resume-tailor_v2_full&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fhealth%2Fpdf%2Froute&page=%2Fapi%2Fhealth%2Fpdf%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fhealth%2Fpdf%2Froute.ts&appDir=%2FUsers%2Fyassinkhalil%2FDownloads%2Fai-resume-tailor_v2_full%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fyassinkhalil%2FDownloads%2Fai-resume-tailor_v2_full&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_yassinkhalil_Downloads_ai_resume_tailor_v2_full_app_api_health_pdf_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/health/pdf/route.ts */ \"(rsc)/./app/api/health/pdf/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/health/pdf/route\",\n        pathname: \"/api/health/pdf\",\n        filename: \"route\",\n        bundlePath: \"app/api/health/pdf/route\"\n    },\n    resolvedPagePath: \"/Users/yassinkhalil/Downloads/ai-resume-tailor_v2_full/app/api/health/pdf/route.ts\",\n    nextConfigOutput,\n    userland: _Users_yassinkhalil_Downloads_ai_resume_tailor_v2_full_app_api_health_pdf_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/health/pdf/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZoZWFsdGglMkZwZGYlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmhlYWx0aCUyRnBkZiUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmhlYWx0aCUyRnBkZiUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnlhc3NpbmtoYWxpbCUyRkRvd25sb2FkcyUyRmFpLXJlc3VtZS10YWlsb3JfdjJfZnVsbCUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZ5YXNzaW5raGFsaWwlMkZEb3dubG9hZHMlMkZhaS1yZXN1bWUtdGFpbG9yX3YyX2Z1bGwmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ2tDO0FBQy9HO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWktcmVzdW1lLXRhaWxvci8/YzdjMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMveWFzc2lua2hhbGlsL0Rvd25sb2Fkcy9haS1yZXN1bWUtdGFpbG9yX3YyX2Z1bGwvYXBwL2FwaS9oZWFsdGgvcGRmL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9oZWFsdGgvcGRmL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvaGVhbHRoL3BkZlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvaGVhbHRoL3BkZi9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy95YXNzaW5raGFsaWwvRG93bmxvYWRzL2FpLXJlc3VtZS10YWlsb3JfdjJfZnVsbC9hcHAvYXBpL2hlYWx0aC9wZGYvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL2hlYWx0aC9wZGYvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fhealth%2Fpdf%2Froute&page=%2Fapi%2Fhealth%2Fpdf%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fhealth%2Fpdf%2Froute.ts&appDir=%2FUsers%2Fyassinkhalil%2FDownloads%2Fai-resume-tailor_v2_full%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fyassinkhalil%2FDownloads%2Fai-resume-tailor_v2_full&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/health/pdf/route.ts":
/*!*************************************!*\
  !*** ./app/api/health/pdf/route.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_pdf_monitoring__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../lib/pdf-monitoring */ \"(rsc)/./lib/pdf-monitoring.ts\");\n\n\nasync function GET(req) {\n    try {\n        const healthStatus = await (0,_lib_pdf_monitoring__WEBPACK_IMPORTED_MODULE_1__.getPDFHealthStatus)();\n        const metrics = (0,_lib_pdf_monitoring__WEBPACK_IMPORTED_MODULE_1__.getPDFMetrics)();\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            service: \"pdf-generation\",\n            status: healthStatus.status,\n            issues: healthStatus.issues,\n            metrics: {\n                totalRequests: metrics.totalRequests,\n                successRate: `${metrics.successRate.toFixed(1)}%`,\n                averageResponseTime: `${metrics.averageResponseTime.toFixed(0)}ms`,\n                methodBreakdown: metrics.methodBreakdown,\n                qualityBreakdown: metrics.qualityBreakdown,\n                errorBreakdown: metrics.errorBreakdown\n            },\n            timestamp: healthStatus.timestamp,\n            uptime: process.uptime()\n        });\n    } catch (error) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            service: \"pdf-generation\",\n            status: \"error\",\n            error: error instanceof Error ? error.message : \"Unknown error\",\n            timestamp: new Date().toISOString()\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL2hlYWx0aC9wZGYvcm91dGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXVEO0FBQzJCO0FBRTNFLGVBQWVHLElBQUlDLEdBQWdCO0lBQ3hDLElBQUk7UUFDRixNQUFNQyxlQUFlLE1BQU1KLHVFQUFrQkE7UUFDN0MsTUFBTUssVUFBVUosa0VBQWFBO1FBRTdCLE9BQU9GLHFEQUFZQSxDQUFDTyxJQUFJLENBQUM7WUFDdkJDLFNBQVM7WUFDVEMsUUFBUUosYUFBYUksTUFBTTtZQUMzQkMsUUFBUUwsYUFBYUssTUFBTTtZQUMzQkosU0FBUztnQkFDUEssZUFBZUwsUUFBUUssYUFBYTtnQkFDcENDLGFBQWEsQ0FBQyxFQUFFTixRQUFRTSxXQUFXLENBQUNDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDakRDLHFCQUFxQixDQUFDLEVBQUVSLFFBQVFRLG1CQUFtQixDQUFDRCxPQUFPLENBQUMsR0FBRyxFQUFFLENBQUM7Z0JBQ2xFRSxpQkFBaUJULFFBQVFTLGVBQWU7Z0JBQ3hDQyxrQkFBa0JWLFFBQVFVLGdCQUFnQjtnQkFDMUNDLGdCQUFnQlgsUUFBUVcsY0FBYztZQUN4QztZQUNBQyxXQUFXYixhQUFhYSxTQUFTO1lBQ2pDQyxRQUFRQyxRQUFRRCxNQUFNO1FBQ3hCO0lBQ0YsRUFBRSxPQUFPRSxPQUFPO1FBQ2QsT0FBT3JCLHFEQUFZQSxDQUFDTyxJQUFJLENBQUM7WUFDdkJDLFNBQVM7WUFDVEMsUUFBUTtZQUNSWSxPQUFPQSxpQkFBaUJDLFFBQVFELE1BQU1FLE9BQU8sR0FBRztZQUNoREwsV0FBVyxJQUFJTSxPQUFPQyxXQUFXO1FBQ25DLEdBQUc7WUFBRWhCLFFBQVE7UUFBSTtJQUNuQjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWktcmVzdW1lLXRhaWxvci8uL2FwcC9hcGkvaGVhbHRoL3BkZi9yb3V0ZS50cz81ZjY1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcidcbmltcG9ydCB7IGdldFBERkhlYWx0aFN0YXR1cywgZ2V0UERGTWV0cmljcyB9IGZyb20gJy4uLy4uLy4uLy4uL2xpYi9wZGYtbW9uaXRvcmluZydcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEdFVChyZXE6IE5leHRSZXF1ZXN0KSB7XG4gIHRyeSB7XG4gICAgY29uc3QgaGVhbHRoU3RhdHVzID0gYXdhaXQgZ2V0UERGSGVhbHRoU3RhdHVzKClcbiAgICBjb25zdCBtZXRyaWNzID0gZ2V0UERGTWV0cmljcygpXG4gICAgXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcbiAgICAgIHNlcnZpY2U6ICdwZGYtZ2VuZXJhdGlvbicsXG4gICAgICBzdGF0dXM6IGhlYWx0aFN0YXR1cy5zdGF0dXMsXG4gICAgICBpc3N1ZXM6IGhlYWx0aFN0YXR1cy5pc3N1ZXMsXG4gICAgICBtZXRyaWNzOiB7XG4gICAgICAgIHRvdGFsUmVxdWVzdHM6IG1ldHJpY3MudG90YWxSZXF1ZXN0cyxcbiAgICAgICAgc3VjY2Vzc1JhdGU6IGAke21ldHJpY3Muc3VjY2Vzc1JhdGUudG9GaXhlZCgxKX0lYCxcbiAgICAgICAgYXZlcmFnZVJlc3BvbnNlVGltZTogYCR7bWV0cmljcy5hdmVyYWdlUmVzcG9uc2VUaW1lLnRvRml4ZWQoMCl9bXNgLFxuICAgICAgICBtZXRob2RCcmVha2Rvd246IG1ldHJpY3MubWV0aG9kQnJlYWtkb3duLFxuICAgICAgICBxdWFsaXR5QnJlYWtkb3duOiBtZXRyaWNzLnF1YWxpdHlCcmVha2Rvd24sXG4gICAgICAgIGVycm9yQnJlYWtkb3duOiBtZXRyaWNzLmVycm9yQnJlYWtkb3duXG4gICAgICB9LFxuICAgICAgdGltZXN0YW1wOiBoZWFsdGhTdGF0dXMudGltZXN0YW1wLFxuICAgICAgdXB0aW1lOiBwcm9jZXNzLnVwdGltZSgpXG4gICAgfSlcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgc2VydmljZTogJ3BkZi1nZW5lcmF0aW9uJyxcbiAgICAgIHN0YXR1czogJ2Vycm9yJyxcbiAgICAgIGVycm9yOiBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdVbmtub3duIGVycm9yJyxcbiAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXG4gICAgfSwgeyBzdGF0dXM6IDUwMCB9KVxuICB9XG59XG4iXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwiZ2V0UERGSGVhbHRoU3RhdHVzIiwiZ2V0UERGTWV0cmljcyIsIkdFVCIsInJlcSIsImhlYWx0aFN0YXR1cyIsIm1ldHJpY3MiLCJqc29uIiwic2VydmljZSIsInN0YXR1cyIsImlzc3VlcyIsInRvdGFsUmVxdWVzdHMiLCJzdWNjZXNzUmF0ZSIsInRvRml4ZWQiLCJhdmVyYWdlUmVzcG9uc2VUaW1lIiwibWV0aG9kQnJlYWtkb3duIiwicXVhbGl0eUJyZWFrZG93biIsImVycm9yQnJlYWtkb3duIiwidGltZXN0YW1wIiwidXB0aW1lIiwicHJvY2VzcyIsImVycm9yIiwiRXJyb3IiLCJtZXNzYWdlIiwiRGF0ZSIsInRvSVNPU3RyaW5nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/api/health/pdf/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/pdf-monitoring.ts":
/*!*******************************!*\
  !*** ./lib/pdf-monitoring.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getPDFHealthStatus: () => (/* binding */ getPDFHealthStatus),\n/* harmony export */   getPDFMetrics: () => (/* binding */ getPDFMetrics),\n/* harmony export */   pdfMonitoring: () => (/* binding */ pdfMonitoring),\n/* harmony export */   trackPDFFailure: () => (/* binding */ trackPDFFailure),\n/* harmony export */   trackPDFSuccess: () => (/* binding */ trackPDFSuccess)\n/* harmony export */ });\n/* harmony import */ var _telemetry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./telemetry */ \"(rsc)/./lib/telemetry.ts\");\n\nclass PDFMonitoringService {\n    async trackPDFRequest(method, success, responseTime, error, quality) {\n        this.metrics.totalRequests++;\n        if (success) {\n            this.metrics.successfulRequests++;\n        } else {\n            this.metrics.failedRequests++;\n        }\n        // Update success rate\n        this.metrics.successRate = this.metrics.successfulRequests / this.metrics.totalRequests * 100;\n        // Update average response time\n        this.metrics.averageResponseTime = (this.metrics.averageResponseTime * (this.metrics.totalRequests - 1) + responseTime) / this.metrics.totalRequests;\n        // Update method breakdown\n        if (!this.metrics.methodBreakdown[method]) {\n            this.metrics.methodBreakdown[method] = {\n                count: 0,\n                successRate: 0\n            };\n        }\n        this.metrics.methodBreakdown[method].count++;\n        this.metrics.methodBreakdown[method].successRate = (this.metrics.methodBreakdown[method].count * this.metrics.methodBreakdown[method].successRate + (success ? 1 : 0)) / this.metrics.methodBreakdown[method].count;\n        // Update quality breakdown\n        if (quality) {\n            this.metrics.qualityBreakdown[quality] = (this.metrics.qualityBreakdown[quality] || 0) + 1;\n        }\n        // Update error breakdown\n        if (error) {\n            this.metrics.errorBreakdown[error] = (this.metrics.errorBreakdown[error] || 0) + 1;\n        }\n        // Check for alert conditions\n        if (!success) {\n            await this.checkAlertConditions(method, error || \"Unknown error\");\n        }\n    }\n    async checkAlertConditions(method, error) {\n        const now = Date.now();\n        const fiveMinutesAgo = now - 5 * 60 * 1000;\n        // Count recent failures\n        const recentFailures = this.metrics.failedRequests // Simplified for demo\n        ;\n        let severity = \"low\";\n        if (recentFailures >= this.failureThresholds.critical) {\n            severity = \"critical\";\n        } else if (recentFailures >= this.failureThresholds.high) {\n            severity = \"high\";\n        } else if (recentFailures >= this.failureThresholds.medium) {\n            severity = \"medium\";\n        }\n        // Check cooldown to avoid spam\n        const alertKey = `${method}-${severity}`;\n        const lastAlert = this.alertCooldowns.get(alertKey) || 0;\n        const cooldownPeriod = severity === \"critical\" ? 60000 : 300000 // 1 min for critical, 5 min for others\n        ;\n        if (now - lastAlert < cooldownPeriod) {\n            return; // Still in cooldown\n        }\n        // Send alert\n        await this.sendAlert({\n            timestamp: new Date().toISOString(),\n            sessionId: \"system\",\n            method,\n            error,\n            htmlLength: 0,\n            retryCount: 0,\n            fallbackUsed: false,\n            severity\n        });\n        this.alertCooldowns.set(alertKey, now);\n    }\n    async sendAlert(alert) {\n        console.error(`🚨 PDF ALERT [${alert.severity.toUpperCase()}]:`, {\n            method: alert.method,\n            error: alert.error,\n            severity: alert.severity,\n            timestamp: alert.timestamp\n        });\n        // Log to telemetry\n        (0,_telemetry__WEBPACK_IMPORTED_MODULE_0__.logError)(new Error(`PDF Alert: ${alert.error}`), {\n            alert,\n            severity: alert.severity,\n            method: alert.method\n        });\n        // Send to external monitoring service if configured\n        if (process.env.MONITORING_WEBHOOK_URL) {\n            try {\n                await fetch(process.env.MONITORING_WEBHOOK_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        text: `🚨 PDF Generation Alert [${alert.severity.toUpperCase()}]`,\n                        attachments: [\n                            {\n                                color: alert.severity === \"critical\" ? \"danger\" : alert.severity === \"high\" ? \"warning\" : \"good\",\n                                fields: [\n                                    {\n                                        title: \"Method\",\n                                        value: alert.method,\n                                        short: true\n                                    },\n                                    {\n                                        title: \"Error\",\n                                        value: alert.error,\n                                        short: false\n                                    },\n                                    {\n                                        title: \"Severity\",\n                                        value: alert.severity,\n                                        short: true\n                                    },\n                                    {\n                                        title: \"Time\",\n                                        value: alert.timestamp,\n                                        short: true\n                                    }\n                                ]\n                            }\n                        ]\n                    })\n                });\n            } catch (error) {\n                console.error(\"Failed to send monitoring webhook:\", error);\n            }\n        }\n        // Send email alert for critical issues\n        if (alert.severity === \"critical\" && process.env.ALERT_EMAIL) {\n            await this.sendEmailAlert(alert);\n        }\n    }\n    async sendEmailAlert(alert) {\n        // This would integrate with your email service (SendGrid, AWS SES, etc.)\n        console.error(`📧 CRITICAL PDF FAILURE - Email alert would be sent to ${process.env.ALERT_EMAIL}`);\n    }\n    getMetrics() {\n        return {\n            ...this.metrics\n        };\n    }\n    resetMetrics() {\n        this.metrics = {\n            totalRequests: 0,\n            successfulRequests: 0,\n            failedRequests: 0,\n            successRate: 0,\n            averageResponseTime: 0,\n            methodBreakdown: {},\n            qualityBreakdown: {},\n            errorBreakdown: {}\n        };\n    }\n    // Health check endpoint data\n    getHealthStatus() {\n        const successRate = this.metrics.successRate;\n        const avgResponseTime = this.metrics.averageResponseTime;\n        let status = \"healthy\";\n        let issues = [];\n        if (successRate < 80) {\n            status = \"unhealthy\";\n            issues.push(`Low success rate: ${successRate.toFixed(1)}%`);\n        } else if (successRate < 95) {\n            status = \"degraded\";\n            issues.push(`Degraded success rate: ${successRate.toFixed(1)}%`);\n        }\n        if (avgResponseTime > 10000) {\n            status = status === \"healthy\" ? \"degraded\" : status;\n            issues.push(`Slow response time: ${avgResponseTime.toFixed(0)}ms`);\n        }\n        return {\n            status,\n            issues,\n            metrics: this.metrics,\n            timestamp: new Date().toISOString()\n        };\n    }\n    constructor(){\n        this.failureThresholds = {\n            low: 5,\n            medium: 10,\n            high: 20,\n            critical: 50 // 50 failures in 5 minutes\n        };\n        this.alertCooldowns = new Map();\n        this.metrics = {\n            totalRequests: 0,\n            successfulRequests: 0,\n            failedRequests: 0,\n            successRate: 0,\n            averageResponseTime: 0,\n            methodBreakdown: {},\n            qualityBreakdown: {},\n            errorBreakdown: {}\n        };\n    }\n}\n// Singleton instance\nconst pdfMonitoring = new PDFMonitoringService();\n// Enhanced logging functions\nasync function trackPDFSuccess(method, responseTime, quality) {\n    await pdfMonitoring.trackPDFRequest(method, true, responseTime, undefined, quality);\n    (0,_telemetry__WEBPACK_IMPORTED_MODULE_0__.logPDFGeneration)(1, true, undefined, method, 0);\n}\nasync function trackPDFFailure(method, error, responseTime = 0) {\n    await pdfMonitoring.trackPDFRequest(method, false, responseTime, error);\n    (0,_telemetry__WEBPACK_IMPORTED_MODULE_0__.logPDFGeneration)(1, false, error, method, 0);\n}\n// Health check endpoint\nasync function getPDFHealthStatus() {\n    return pdfMonitoring.getHealthStatus();\n}\n// Metrics endpoint\nfunction getPDFMetrics() {\n    return pdfMonitoring.getMetrics();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/pdf-monitoring.ts\n");

/***/ }),

/***/ "(rsc)/./lib/telemetry.ts":
/*!**************************!*\
  !*** ./lib/telemetry.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logAIResponse: () => (/* binding */ logAIResponse),\n/* harmony export */   logError: () => (/* binding */ logError),\n/* harmony export */   logPDFGeneration: () => (/* binding */ logPDFGeneration),\n/* harmony export */   logRequestTelemetry: () => (/* binding */ logRequestTelemetry),\n/* harmony export */   logSessionActivity: () => (/* binding */ logSessionActivity),\n/* harmony export */   startTrace: () => (/* binding */ startTrace)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm-node/v4.js\");\n\n\nconst TELEMETRY_PATH = \"/tmp/telemetry.jsonl\";\nconst AI_RESPONSES_PATH = \"/tmp/ai-responses.jsonl\";\nconst ERROR_LOG_PATH = \"/tmp/error-log.jsonl\";\nconst LOG_DRAIN_URL = process.env.LOG_DRAIN_URL || \"\";\nconst LOG_DRAIN_KEY = process.env.LOG_DRAIN_KEY || \"\";\nfunction startTrace(meta = {}) {\n    const id = (0,uuid__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n    const t0 = Date.now();\n    function end(ok, extra = {}) {\n        const rec = {\n            req_id: id,\n            route: meta.route || \"unknown\",\n            timing: Date.now() - t0,\n            timestamp: new Date().toISOString(),\n            final_status: ok ? \"success\" : \"error\",\n            ...meta,\n            ...extra\n        };\n        try {\n            fs__WEBPACK_IMPORTED_MODULE_0___default().appendFileSync(TELEMETRY_PATH, JSON.stringify(rec) + \"\\n\");\n        } catch (e) {\n            console.warn(\"Failed to write telemetry:\", e);\n        }\n        void sendToDrain(rec);\n        return rec;\n    }\n    return {\n        id,\n        end\n    };\n}\nfunction logAIResponse(attempt, success, error, responseLength, model) {\n    const logEntry = {\n        timestamp: new Date().toISOString(),\n        type: \"ai_response\",\n        attempt,\n        success,\n        error: error?.substring(0, 500),\n        responseLength,\n        model: model || process.env.OPENAI_MODEL || \"gpt-4o-mini\"\n    };\n    try {\n        fs__WEBPACK_IMPORTED_MODULE_0___default().appendFileSync(AI_RESPONSES_PATH, JSON.stringify(logEntry) + \"\\n\");\n    } catch (e) {\n        console.warn(\"Failed to log AI response:\", e);\n    }\n    void sendToDrain(logEntry);\n}\nfunction logError(error, context = {}) {\n    const logEntry = {\n        timestamp: new Date().toISOString(),\n        type: \"error\",\n        message: error.message,\n        stack: error.stack,\n        context: JSON.stringify(context)\n    };\n    try {\n        fs__WEBPACK_IMPORTED_MODULE_0___default().appendFileSync(ERROR_LOG_PATH, JSON.stringify(logEntry) + \"\\n\");\n    } catch (e) {\n        console.warn(\"Failed to log error:\", e);\n    }\n    void sendToDrain(logEntry);\n}\nfunction logPDFGeneration(attempt, success, error, method, size) {\n    const logEntry = {\n        timestamp: new Date().toISOString(),\n        type: \"pdf_generation\",\n        attempt,\n        success,\n        error: error?.substring(0, 500),\n        method,\n        size\n    };\n    try {\n        fs__WEBPACK_IMPORTED_MODULE_0___default().appendFileSync(TELEMETRY_PATH, JSON.stringify(logEntry) + \"\\n\");\n    } catch (e) {\n        console.warn(\"Failed to log PDF generation:\", e);\n    }\n    void sendToDrain(logEntry);\n}\nfunction logSessionActivity(sessionId, activity, details = {}) {\n    const logEntry = {\n        timestamp: new Date().toISOString(),\n        type: \"session_activity\",\n        sessionId,\n        activity,\n        details: JSON.stringify(details)\n    };\n    try {\n        fs__WEBPACK_IMPORTED_MODULE_0___default().appendFileSync(TELEMETRY_PATH, JSON.stringify(logEntry) + \"\\n\");\n    } catch (e) {\n        console.warn(\"Failed to log session activity:\", e);\n    }\n    void sendToDrain(logEntry);\n}\nfunction logRequestTelemetry(data) {\n    const logEntry = {\n        timestamp: new Date().toISOString(),\n        type: \"request_telemetry\",\n        ...data\n    };\n    try {\n        fs__WEBPACK_IMPORTED_MODULE_0___default().appendFileSync(TELEMETRY_PATH, JSON.stringify(logEntry) + \"\\n\");\n    } catch (e) {\n        console.warn(\"Failed to log request telemetry:\", e);\n    }\n    void sendToDrain(logEntry);\n}\nasync function sendToDrain(entry) {\n    if (!LOG_DRAIN_URL) return;\n    try {\n        await fetch(LOG_DRAIN_URL, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                ...LOG_DRAIN_KEY ? {\n                    \"Authorization\": `Bearer ${LOG_DRAIN_KEY}`\n                } : {}\n            },\n            body: JSON.stringify(entry)\n        });\n    } catch  {}\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/telemetry.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@opentelemetry","vendor-chunks/uuid"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fhealth%2Fpdf%2Froute&page=%2Fapi%2Fhealth%2Fpdf%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fhealth%2Fpdf%2Froute.ts&appDir=%2FUsers%2Fyassinkhalil%2FDownloads%2Fai-resume-tailor_v2_full%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fyassinkhalil%2FDownloads%2Fai-resume-tailor_v2_full&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();